{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Integrated Design Project V2.0 In the integrated design project (IDP) teams work in teams of 6 to develop an autonomous robotic system to solve a problem inspired by a real-world challenge. These will required the development of hardware, electronics and sensing and the accompanying control and software systems. Over 4 weeks teams develop a robot and at the end of the project there is a competition to assess the performance of the teams robots. The lab lasts for four weeks, with three timetabled timetabled sessions: Thursday 9-11 Monday 11-1 Tuesday 9-11 (first week only!) Wednesday 9-11 The EIETL is open from 8am-5pm, and can be used during these times. The Dyson Centre is also available for use however there is only technician support (which limits when some equipment can be used) for limited periods. The laser cutter can be used from 8am-5pm, and the 3D printers likewise. If you require out-of-hours access to the Dyson Centre, you must fill in the relevant forms. It is expected per week you spend twice the scheduled time on this project. You must use your university card to sign in for the lab before the five past the hour official start of the project, failure to do so will mean you are not marked as attending the lab. Even when not working in the EIETL you must head there first to sign in. For design acceptance or functional demonstration outside of core IDP hours, the EIETL technicans can perform this (as long as they are not busy with other lab) in the following hours: Morning: 9:00 -11:30 Afternoon: 14:00 - 16:00 The full timetable of events and deadlines is given below in the schedule and deadlines section. Aims & Objectives The key aim of the project is to develop an understanding of systems design and integration and also how project management and team work skills to design and manufacture a system. In particular, this involves: \u2022 appreciate the nature of systems design. \u2022 appreciate the importance of co-ordinated teamwork and project management. \u2022 apply and integrate the engineering principles taught in Part I. \u2022 understand how to produce detailed design proposals. \u2022 gain experience of building and testing a system once it has been designed. In this project, rapid-prototyping techniques are used which enables rapid development, integration and testing of systems, allowing for multiple iterations of the systems. Task and Team Allocation Each IDP cohort has a different task and rules set. A challenge set will be produced for each group, and the current (and existing challenges can be found here): Michaelmas 2018, M2 Task With the team allocations give here: Michaelmas 2018 Team Allocations If you have any questions about the task, please use the forum in the Moodle VLE in the first place, or email Josie Hughes (jaeh2). Project Management Team work is key to the success of this project. Teams should elect one team leader during the first session. This is an integrated design project. Therefore, the main key elements (mechanics, electronics and software) cannot be considered in isolation, and for successful integration teams members can not just be aware of one of these elements. However, it may be useful to loosely assign two team members to each of these areas, with the understanding that communication and inter-disciplinary work is required. Additionally, the project may require adgile distribution of the work force, for example with a greater focus on mechanical first to get a chassis built to enable successful integration. There is a project management session at 2pm first thursday. Make sure you attend this session. Resources Full resources including getting started guides and a list of parts can be found on the resources page here . Assessment The assessment of the course has a number of different components. These are summarised below and the weighting and deadline given. The weeks of the deadline correspond to the weeks into the project: Assessment Weighting Deadline Initial Presentation (Group) 5% Week 1, Tuesday Initial Report (Group) 5% Week 1, Wednesday Design Assessment (Group) 10% [max 5% is deadline missed] Week 2, Wednesday Functional Demonstration (Group) 10% Week 3, Wednesday Competition Performance (Group) 20% Week 4, Wednesday Final Presentation 20% Week 4, Wednesday Final Report 20% Week 5, Monday Detailed requirements and examples of the materials which must be submitted can be found here . Schedule & Deadlines The following table summarises the key activities and deadlines at each session. The weeks refer to the number of week of the project - thus is you are doing the project in the second half of the term Week 1 will correspond to Week 5. Week Day Activity Deadline Week 1 Thursday 9:00: Introduction Session, EIETL Projector 14:00: Project Management Lecture Monday 11:30: Workshop Introduction (Teams 1-6), Dyson Centre 11:30: Software Introduction (All teams), LR3B 11:30: Electrical Introduction (All teams), EIETL Projector 12:00: Laser Cutter Introduction (Teams 1-4, 1 person per team), Dyson Centre 12:15: Workshop Introduction (Teams 7-12), Dyson Centre 14:00: CAD + Rapid Protoyping Introduction, Dyson Centre Tuesday First Presentation, find the timetable and room allocation here Wednesday 12:00: Laser Cutter Introduction (Teams 5-8, 1 person per team), Dyson Centre 14:00: Laser Cutter Introduction (Teams 9-12, Dyson Centre) Week 2 Thursday Feedback on 1st Report returned to teams Monday Wednesday Deadline for Design Acceptance Week 3 Thursday System Integration Presentation. Quick 5 min update to present the integration progress/challenges Monday Wednesday Functional Demonstration Deadline Week 4 Thursday Monday Wednesday AM: Last scheduled session 2pm: Final Presentation & Competition Week 5 Monday Final Report Deadline. Submit on Moodle. Feedback Suggestions for improvements in the organisation and structure of this project, and for future problem specifications which might be set for later projects, will be very welcome. The Fast Feedback mechanism should be used for this purpose. Please also complete the section of the on-line survey relating to the IDP as soon as you have finished the project. Contact Should you have any questions or concerns during the project please in the first instance see a demonstrator who will be there at each lab session, the EIETL Technical Team, or email Dave Patterson (dip26) or Josie Hughes (jaeh2).","title":"Home"},{"location":"#integrated-design-project-v20","text":"In the integrated design project (IDP) teams work in teams of 6 to develop an autonomous robotic system to solve a problem inspired by a real-world challenge. These will required the development of hardware, electronics and sensing and the accompanying control and software systems. Over 4 weeks teams develop a robot and at the end of the project there is a competition to assess the performance of the teams robots. The lab lasts for four weeks, with three timetabled timetabled sessions: Thursday 9-11 Monday 11-1 Tuesday 9-11 (first week only!) Wednesday 9-11 The EIETL is open from 8am-5pm, and can be used during these times. The Dyson Centre is also available for use however there is only technician support (which limits when some equipment can be used) for limited periods. The laser cutter can be used from 8am-5pm, and the 3D printers likewise. If you require out-of-hours access to the Dyson Centre, you must fill in the relevant forms. It is expected per week you spend twice the scheduled time on this project. You must use your university card to sign in for the lab before the five past the hour official start of the project, failure to do so will mean you are not marked as attending the lab. Even when not working in the EIETL you must head there first to sign in. For design acceptance or functional demonstration outside of core IDP hours, the EIETL technicans can perform this (as long as they are not busy with other lab) in the following hours: Morning: 9:00 -11:30 Afternoon: 14:00 - 16:00 The full timetable of events and deadlines is given below in the schedule and deadlines section.","title":"Integrated Design Project V2.0"},{"location":"#aims-objectives","text":"The key aim of the project is to develop an understanding of systems design and integration and also how project management and team work skills to design and manufacture a system. In particular, this involves: \u2022 appreciate the nature of systems design. \u2022 appreciate the importance of co-ordinated teamwork and project management. \u2022 apply and integrate the engineering principles taught in Part I. \u2022 understand how to produce detailed design proposals. \u2022 gain experience of building and testing a system once it has been designed. In this project, rapid-prototyping techniques are used which enables rapid development, integration and testing of systems, allowing for multiple iterations of the systems.","title":"Aims &amp; Objectives"},{"location":"#task-and-team-allocation","text":"Each IDP cohort has a different task and rules set. A challenge set will be produced for each group, and the current (and existing challenges can be found here): Michaelmas 2018, M2 Task With the team allocations give here: Michaelmas 2018 Team Allocations If you have any questions about the task, please use the forum in the Moodle VLE in the first place, or email Josie Hughes (jaeh2).","title":"Task and Team Allocation"},{"location":"#project-management","text":"Team work is key to the success of this project. Teams should elect one team leader during the first session. This is an integrated design project. Therefore, the main key elements (mechanics, electronics and software) cannot be considered in isolation, and for successful integration teams members can not just be aware of one of these elements. However, it may be useful to loosely assign two team members to each of these areas, with the understanding that communication and inter-disciplinary work is required. Additionally, the project may require adgile distribution of the work force, for example with a greater focus on mechanical first to get a chassis built to enable successful integration. There is a project management session at 2pm first thursday. Make sure you attend this session.","title":"Project Management"},{"location":"#resources","text":"Full resources including getting started guides and a list of parts can be found on the resources page here .","title":"Resources"},{"location":"#assessment","text":"The assessment of the course has a number of different components. These are summarised below and the weighting and deadline given. The weeks of the deadline correspond to the weeks into the project: Assessment Weighting Deadline Initial Presentation (Group) 5% Week 1, Tuesday Initial Report (Group) 5% Week 1, Wednesday Design Assessment (Group) 10% [max 5% is deadline missed] Week 2, Wednesday Functional Demonstration (Group) 10% Week 3, Wednesday Competition Performance (Group) 20% Week 4, Wednesday Final Presentation 20% Week 4, Wednesday Final Report 20% Week 5, Monday Detailed requirements and examples of the materials which must be submitted can be found here .","title":"Assessment"},{"location":"#schedule-deadlines","text":"The following table summarises the key activities and deadlines at each session. The weeks refer to the number of week of the project - thus is you are doing the project in the second half of the term Week 1 will correspond to Week 5. Week Day Activity Deadline Week 1 Thursday 9:00: Introduction Session, EIETL Projector 14:00: Project Management Lecture Monday 11:30: Workshop Introduction (Teams 1-6), Dyson Centre 11:30: Software Introduction (All teams), LR3B 11:30: Electrical Introduction (All teams), EIETL Projector 12:00: Laser Cutter Introduction (Teams 1-4, 1 person per team), Dyson Centre 12:15: Workshop Introduction (Teams 7-12), Dyson Centre 14:00: CAD + Rapid Protoyping Introduction, Dyson Centre Tuesday First Presentation, find the timetable and room allocation here Wednesday 12:00: Laser Cutter Introduction (Teams 5-8, 1 person per team), Dyson Centre 14:00: Laser Cutter Introduction (Teams 9-12, Dyson Centre) Week 2 Thursday Feedback on 1st Report returned to teams Monday Wednesday Deadline for Design Acceptance Week 3 Thursday System Integration Presentation. Quick 5 min update to present the integration progress/challenges Monday Wednesday Functional Demonstration Deadline Week 4 Thursday Monday Wednesday AM: Last scheduled session 2pm: Final Presentation & Competition Week 5 Monday Final Report Deadline. Submit on Moodle.","title":"Schedule &amp; Deadlines"},{"location":"#feedback","text":"Suggestions for improvements in the organisation and structure of this project, and for future problem specifications which might be set for later projects, will be very welcome. The Fast Feedback mechanism should be used for this purpose. Please also complete the section of the on-line survey relating to the IDP as soon as you have finished the project.","title":"Feedback"},{"location":"#contact","text":"Should you have any questions or concerns during the project please in the first instance see a demonstrator who will be there at each lab session, the EIETL Technical Team, or email Dave Patterson (dip26) or Josie Hughes (jaeh2).","title":"Contact"},{"location":"assesment/","text":"IDP: Assessment First Presentation & Report First Presentation (presented as a group) The first presentation should be no longer than 10 minutes, to leave a further 10 minutes for discussion and Q&A. This should be thought of as a the team acting as a consultancy pitching your overall system to your clients. This should include a maximum of 8 slides which should cover the following: Team Name and Management Structure Concept and diagram. This could be hand-drawn diagrams, CAD models or any format which conveys the approach and concept Overall System Level Diagram. Detailing how the electronics, hardware and software interacts Electronics/Sensing. This could include circuit diagrams/block diagrams as to the approach Exploration and navigation algorithms Gantt Chart (resource/time allocation) Any cardboard models/diagrams this should be brought a long for discussion. A printed copy of the report should be brought to the presentation, and the presentation should also be submitted on Moodle. Initial Report (submitted as a group) The initial report should provide a more detailed reflection of the planned system, and where possible reflect the feedback given the initial presentation. It should be a maximum of 6 pages and focus on the same content as given in the First Presentation. The first report should be submitted online on Moodle, only one must be submitted per team. The file name should include the Team Number. Design Acceptance Design acceptance is documentation that must be produced by teams, and is marked as pass/fail. Teams are free to test and develop hardware/software before they gain design acceptance, however, where possible no fully permanent manufacturing should be made before design acceptance. We encourage teams to get design acceptance as early as possible. Software/Overall Design Acceptance For software design acceptance we want to see an overall system diagram, to show how the entire system will integrate together. Additionally, we require details of the algorithms that will be used - this could be pictorial/flow-chart or another say of representing the overall approach and strategy. System Diagram. An example can be found here. Algorithm. An example can be found here. Electrical Design Acceptance For electrical DA we require: Circuit diagram. To clearly communicate the circuits that will be implmented. Each circuit which is going to be created should be document. An example, and notes and hints and tips can be found here. Layout diagrams. An example can be found here. These can be produced by hand or using CAD software, what matters is that they are clear and correct. Software such as LTSpice (which is installed on the department PCs) can be used, equally there are free online circuit drawing systems including circuit-diagram or circuitlab. Fritzing is another online tool (specifically for Arduinos etc. which allows creation of both circuit and layout diagrams and may be a useful tool. Mechanical Design Acceptance For mechanical design acceptance, we want to. These should be sufficient for you to construct your robot, and to use the files to laser cut/3D print parts as required. We want to know what material you have to chosen to use and why as part of the submitted designs. Overall CAD Drawing. System CAD Drawings. Functional Demonstration The aim of functional demonstration is to show that integration of the different sub-systems has been achieved and to encourage teams to perform early integration. They are to demonstrate that the core competencies required for the competition task can be achieved. This is help evaluate the system, if, the robot fails to achieve as well as expected in competition. Functional Demonstration #1: Moving chassis that can navigate without crashing into walls. Functional Demonstration #2: Correct identification of the test object. Final Presentation & Competition The final presentation and competition will have the following format and order: 10 minute presentation Competition run (approximately 10 minutes) 5-10 minutes Q&A. Allows for reflections on how the robot performed. The final presentation (maximum of 8 slides) should focus on the following: Brief review of the overall design strategy Sub-team designs Problems encountered during implementation Changes to the original design and reasons for these Remaining problems Brief statement of likely performance in the competition. A printed copy of the report should be brought to the presentation, and the presentation should also be submitted on Moodle. Final Report (Individual) The final report should be a maximum of 2-pages and should include the following: Team management aspects of the project \u2013 not a narrative describing how you did the work on a day to day basis. Major decisions made during the project should be reviewed and comment made on their correctness. discussion should be put in the context of the robot\u2019s performance in the competition and that of other different designs. Short discussion (1 paragraph) on the cost of producing the prototype and possible savings for a production run of 100 - 1000 units. (See the inside of the back cover for a personal time sheet and the IDP website for a spreadsheet to help analyse costs) The final report should be submitted on Moddle. Each student should submit their own report.","title":"Assessment"},{"location":"assesment/#idp-assessment","text":"","title":"IDP: Assessment"},{"location":"assesment/#first-presentation-report","text":"First Presentation (presented as a group) The first presentation should be no longer than 10 minutes, to leave a further 10 minutes for discussion and Q&A. This should be thought of as a the team acting as a consultancy pitching your overall system to your clients. This should include a maximum of 8 slides which should cover the following: Team Name and Management Structure Concept and diagram. This could be hand-drawn diagrams, CAD models or any format which conveys the approach and concept Overall System Level Diagram. Detailing how the electronics, hardware and software interacts Electronics/Sensing. This could include circuit diagrams/block diagrams as to the approach Exploration and navigation algorithms Gantt Chart (resource/time allocation) Any cardboard models/diagrams this should be brought a long for discussion. A printed copy of the report should be brought to the presentation, and the presentation should also be submitted on Moodle. Initial Report (submitted as a group) The initial report should provide a more detailed reflection of the planned system, and where possible reflect the feedback given the initial presentation. It should be a maximum of 6 pages and focus on the same content as given in the First Presentation. The first report should be submitted online on Moodle, only one must be submitted per team. The file name should include the Team Number.","title":"First Presentation &amp; Report"},{"location":"assesment/#design-acceptance","text":"Design acceptance is documentation that must be produced by teams, and is marked as pass/fail. Teams are free to test and develop hardware/software before they gain design acceptance, however, where possible no fully permanent manufacturing should be made before design acceptance. We encourage teams to get design acceptance as early as possible. Software/Overall Design Acceptance For software design acceptance we want to see an overall system diagram, to show how the entire system will integrate together. Additionally, we require details of the algorithms that will be used - this could be pictorial/flow-chart or another say of representing the overall approach and strategy. System Diagram. An example can be found here. Algorithm. An example can be found here. Electrical Design Acceptance For electrical DA we require: Circuit diagram. To clearly communicate the circuits that will be implmented. Each circuit which is going to be created should be document. An example, and notes and hints and tips can be found here. Layout diagrams. An example can be found here. These can be produced by hand or using CAD software, what matters is that they are clear and correct. Software such as LTSpice (which is installed on the department PCs) can be used, equally there are free online circuit drawing systems including circuit-diagram or circuitlab. Fritzing is another online tool (specifically for Arduinos etc. which allows creation of both circuit and layout diagrams and may be a useful tool. Mechanical Design Acceptance For mechanical design acceptance, we want to. These should be sufficient for you to construct your robot, and to use the files to laser cut/3D print parts as required. We want to know what material you have to chosen to use and why as part of the submitted designs. Overall CAD Drawing. System CAD Drawings.","title":"Design Acceptance"},{"location":"assesment/#functional-demonstration","text":"The aim of functional demonstration is to show that integration of the different sub-systems has been achieved and to encourage teams to perform early integration. They are to demonstrate that the core competencies required for the competition task can be achieved. This is help evaluate the system, if, the robot fails to achieve as well as expected in competition. Functional Demonstration #1: Moving chassis that can navigate without crashing into walls. Functional Demonstration #2: Correct identification of the test object.","title":"Functional Demonstration"},{"location":"assesment/#final-presentation-competition","text":"The final presentation and competition will have the following format and order: 10 minute presentation Competition run (approximately 10 minutes) 5-10 minutes Q&A. Allows for reflections on how the robot performed. The final presentation (maximum of 8 slides) should focus on the following: Brief review of the overall design strategy Sub-team designs Problems encountered during implementation Changes to the original design and reasons for these Remaining problems Brief statement of likely performance in the competition. A printed copy of the report should be brought to the presentation, and the presentation should also be submitted on Moodle.","title":"Final Presentation &amp; Competition"},{"location":"assesment/#final-report-individual","text":"The final report should be a maximum of 2-pages and should include the following: Team management aspects of the project \u2013 not a narrative describing how you did the work on a day to day basis. Major decisions made during the project should be reviewed and comment made on their correctness. discussion should be put in the context of the robot\u2019s performance in the competition and that of other different designs. Short discussion (1 paragraph) on the cost of producing the prototype and possible savings for a production run of 100 - 1000 units. (See the inside of the back cover for a personal time sheet and the IDP website for a spreadsheet to help analyse costs) The final report should be submitted on Moddle. Each student should submit their own report.","title":"Final Report (Individual)"},{"location":"resources/","text":"IDP: Resources Platform In this project, we will be used an Arduino (or OrangePip) as the micro-controller. The Arduino is a low-cost microcontroller which is programmed in C++ via USB and has digital inputs/outputs, analogue inputs and PWM sockets. This allows for different sensors/output devices to be controlled. The mechanical system will be developed using laser cutting, 3D printing and other rapid fabrication methods. Hardware The key components and links to datasheets are given here. In addition to these there is a store of standard electronic parts. Microcontroller & Drivers: OrangePip ( Arduino replica) (x2) Velleman Arduino Motor Driver Prototyping Shield Veroboard + Connectors Sensors/Input Devices Compass/Accelerometer IR Sensors IR Distance Sensor Photoresistor IR diodes Microswitches Mechanical Components: Motors Wheels Servos Wheel Casters Bearing Casters Other: Mains to 9V Power Supply (with split ends to power Arduino + Motor Controller) USB Lead x 2 A list to all other components available can be found here . Electronics: Getting Started We suggest you take a little bit of time familiarising yourself with the Arduino and reading from sensors and setting outputs. There is some cross over between this and the software groups, however, 2 Arduino have been provided per team to allow you to both work on this. The Arduino IDE software is installed on the teaching system, or can be used online, or can be downloaded (for free) on to your personal computer. First, you need to familiarise yourself with the board and the different pins. Read through this page to understand the different inputs types and how the board works. Familiarisation with the Arduino If you are using the web IDE, follow this into tutorial . If you are using th desktop IDE, follow this tutorial. Make sure you can run the 'blinky LED' script and your LED changes. Connect an LED to the Arduino Using your breadboard, now wire up an LED to another digital input on your Arduino, as shown in the figure below You can use jumpers to connect to the Arduino and to the LED; make sure you connect the LED the correct way around and use a current limiting resistor. Change the program written in the previous task to write to the new digital input with the LED is attached to. Read from the Analogue Input Connect the LDR on breadboard with another resistor to form a potential divider as shown. Connect the middle of this potential divider to the analogue Input. We can now using the following to read from the analog input and then print to the to the serial monitor. The serial monitor can help for debugging. Check that the sensor values change when the LDR is covered. int sensorPin = A0; // select the input pin for the potentiometer int sensorValue = 0; // variable to store the value coming from the sensor void setup() { Serial.begin(9600); //Start serial and set the correct Baud Rate } void loop() { sensorValue = analogRead(sensorPin); Serial.println(sensorValue); } Wire-up motor controllers Using the datasheets and documents and examples sketches, wire up the motors. Designing your electronics and sensing? Things to consider when designing your electronics: Do you need a switch/interface to start your robot/reset? Talk with mechanics/software, how are you going to mount your sensors? Should sensors give you a digital/analogue input? Can you convert to a digital input to reduce the load on the software team? How can you connect to the electronics? Make sure you look at the assessment page to see what is required for Design Acceptance and what must be achieved by when. Practical Advice Soldering Software: Getting Started To start with, you should gain familiarity with the Arduino and software and achieve the basics: control of motors, reading from sensors and Familiarisation with the Arduino Motor Control Reading from Sensors Interfacing to Python Things to consider when developing your software: * Do you need a switch/interface to start your robot/reset? Mechanics: Getting Started Start designing your chassis. Advice on CAD for laser cutting: https://www.sculpteo.com/blog/2017/06/14/use-fusion-360-cad-software-for-laser-cutting Deparment Rapid Prototyping Facilities Information on the rapid prototyping facilities available in the department can be found here: Laser Cutting 3D Printing Plasma Cutter The laser cutter may be busy - there are training sessions daily at 12-13 and 14-15; these times should be avoided. The laser cutter should only not be used out of hours and particular care should be taken when cardboard is cut, as this is easily flammable. Things to consider when developing your software: What pins/how will you be interfacing with the electronics sensors? How can you test the software? Arduino Software Support","title":"Resources"},{"location":"resources/#idp-resources","text":"","title":"IDP: Resources"},{"location":"resources/#platform","text":"In this project, we will be used an Arduino (or OrangePip) as the micro-controller. The Arduino is a low-cost microcontroller which is programmed in C++ via USB and has digital inputs/outputs, analogue inputs and PWM sockets. This allows for different sensors/output devices to be controlled. The mechanical system will be developed using laser cutting, 3D printing and other rapid fabrication methods.","title":"Platform"},{"location":"resources/#hardware","text":"The key components and links to datasheets are given here. In addition to these there is a store of standard electronic parts. Microcontroller & Drivers: OrangePip ( Arduino replica) (x2) Velleman Arduino Motor Driver Prototyping Shield Veroboard + Connectors Sensors/Input Devices Compass/Accelerometer IR Sensors IR Distance Sensor Photoresistor IR diodes Microswitches Mechanical Components: Motors Wheels Servos Wheel Casters Bearing Casters Other: Mains to 9V Power Supply (with split ends to power Arduino + Motor Controller) USB Lead x 2 A list to all other components available can be found here .","title":"Hardware"},{"location":"resources/#electronics-getting-started","text":"We suggest you take a little bit of time familiarising yourself with the Arduino and reading from sensors and setting outputs. There is some cross over between this and the software groups, however, 2 Arduino have been provided per team to allow you to both work on this. The Arduino IDE software is installed on the teaching system, or can be used online, or can be downloaded (for free) on to your personal computer. First, you need to familiarise yourself with the board and the different pins. Read through this page to understand the different inputs types and how the board works. Familiarisation with the Arduino If you are using the web IDE, follow this into tutorial . If you are using th desktop IDE, follow this tutorial. Make sure you can run the 'blinky LED' script and your LED changes. Connect an LED to the Arduino Using your breadboard, now wire up an LED to another digital input on your Arduino, as shown in the figure below You can use jumpers to connect to the Arduino and to the LED; make sure you connect the LED the correct way around and use a current limiting resistor. Change the program written in the previous task to write to the new digital input with the LED is attached to. Read from the Analogue Input Connect the LDR on breadboard with another resistor to form a potential divider as shown. Connect the middle of this potential divider to the analogue Input. We can now using the following to read from the analog input and then print to the to the serial monitor. The serial monitor can help for debugging. Check that the sensor values change when the LDR is covered. int sensorPin = A0; // select the input pin for the potentiometer int sensorValue = 0; // variable to store the value coming from the sensor void setup() { Serial.begin(9600); //Start serial and set the correct Baud Rate } void loop() { sensorValue = analogRead(sensorPin); Serial.println(sensorValue); } Wire-up motor controllers Using the datasheets and documents and examples sketches, wire up the motors. Designing your electronics and sensing? Things to consider when designing your electronics: Do you need a switch/interface to start your robot/reset? Talk with mechanics/software, how are you going to mount your sensors? Should sensors give you a digital/analogue input? Can you convert to a digital input to reduce the load on the software team? How can you connect to the electronics? Make sure you look at the assessment page to see what is required for Design Acceptance and what must be achieved by when. Practical Advice Soldering","title":"Electronics: Getting Started"},{"location":"resources/#software-getting-started","text":"To start with, you should gain familiarity with the Arduino and software and achieve the basics: control of motors, reading from sensors and Familiarisation with the Arduino Motor Control Reading from Sensors Interfacing to Python Things to consider when developing your software: * Do you need a switch/interface to start your robot/reset?","title":"Software: Getting Started"},{"location":"resources/#mechanics-getting-started","text":"Start designing your chassis. Advice on CAD for laser cutting: https://www.sculpteo.com/blog/2017/06/14/use-fusion-360-cad-software-for-laser-cutting Deparment Rapid Prototyping Facilities Information on the rapid prototyping facilities available in the department can be found here: Laser Cutting 3D Printing Plasma Cutter The laser cutter may be busy - there are training sessions daily at 12-13 and 14-15; these times should be avoided. The laser cutter should only not be used out of hours and particular care should be taken when cardboard is cut, as this is easily flammable. Things to consider when developing your software: What pins/how will you be interfacing with the electronics sensors? How can you test the software?","title":"Mechanics: Getting Started"},{"location":"resources/#arduino-software-support","text":"","title":"Arduino Software Support"}]}